General Notes:

Bash will refer to mingw32, since I'm using windows.
___________________________________________________________
1. Get Up and Running
	Installation for Non-Mac Users

Trick for being able to use "subl" in mingw: (at least for windows vista):

- Follow all steps in https://www.baserails.com/courses/yelpdemo/installation-for-non-mac-users

- Download and install Git

- Open sysdm.cpl -> Advanced -> Environment Variables

- In Path, (mostly likely only the path for system variables but I also did it for user variables): put the file location for 

C:\Program Files\Git\bin

and add ;%SUBLIME% to the end of the user variable version

and in system variables add: 

variable name: SUBLIME
variable value: C:\Program Files\Sublime Text 2

 -In  C:\Program Files\Git\bin, add a file created with notepad (BUT NO FILE EXTENSION) with the following:

#!/bin/sh
"C:\Program Files\Sublime Text 2\sublime_text.exe" $1 &

-Save this file as 'subl'

-Now (finally) you should be able to open up an instance of sublime text in mingw32 by using entering 'subl'.

- You can also open sublime text in the windows cmd: just enter sublime_text.exe

___________________________________________________________
Don't forget to install git bash on its own, as well. I mean the one from the git website, not just the prepackaged one that came with the default install.
You'll need different versions of it to hack your way through. Such is the live of a windows programmer, unfortunately.

___________________________________________________________
2. Create Our Website
	Create a New App

Make sure the Git Bash you're using is the "rainbow" one, not the red one. 'Cause this one has pwd /c/Users/user, which is what you want.


Before you can see the rails server on localhost:3000, 

I did a bundle install, 


___________________________________________________________
2. Add Our First Pages

As for opening a new tab of bash (in windows, it's MinGW32), the best you can do is open a new window of mingw32. 

Also, doing rails s(erver) again while you haven't exited the server from the previous mingw32 will obviously give you the message, "A server is already running."

And damn, maybe I should find a way to open up sublime text 2 from mingw32... maybe just changing the path in sysdm.cpl? Too fucking lazy to experiment with that at the moment though.

___________________________________________________________
2. Add Links

Don't forget your http(s) in your external links!

Application.html.erb is the default layout for all pages. Handy for putting links to all the different pages at the top, here.

___________________________________________________________
2. Add Restaurants

Migration (database) steps: create it (rails generate scaffold Restaurant...)
rake it (rake db:migrate)
restart the server(ctrl-c, rails s)

Annoying hacky fix to server not updating:
bash1: rails s
bash2: initiate migration, rake it. 
bash1: ctrl-c shut down server
bash2: start server

either continue using bash1, or open up another bash to start using as your "main".

If you miss a field in the generate scaffold:

https://www.google.com/search?q=add+category+to+rails+scaffold&rlz=1C1CHFX_enCA499CA499&oq=add+category+to+rails+scaffold&aqs=chrome..69i57.6407j0j1&sourceid=chrome&es_sm=122&ie=UTF-8#q=rails+add+field+to+scaffold

http://stackoverflow.com/questions/4805836/how-do-i-add-a-field-after-ive-run-rails-generate-model-scaffold

http://stackoverflow.com/questions/28523853/rails-4-add-column-to-an-existing-scaffold

http://stackoverflow.com/questions/10352832/adding-a-new-field-to-rails-model

________________________
So: if I missed the phone:string, I have to do this in bash: 

rails g migration add_phone_to_Restaurant phone:string

rake db:migrate

Now, the fun part: have to manually alter views, controllers... (l stands for line)
yelpdemo/app/controllers/concerns/restaurant_controller l72
yelpdemo/app/views/restaurants/_form.html.erb l22
yelpdemo/app/views/restaurants/index.html.erb l8, l19
yelpdemo/app/views/restaurants/index.json.jbuilder l2
yelpdemo/app/views/restaurants/show.html.erb l14
yelpdemo/app/views/restaurants/show.json.jbuilder l1

yelpdemo/db/migrate/timestamp_add_phone_to_Restaurant -> record of what you've done
yelpdemo/db/migrate/schema.rb -> see that t.string "phone" has been updated into the restaurants table

yelpdemo/test/controllers/restaurants_controller_test.rb
yelpdemo/test/fixtures/restaurants.yml l6, l12

Lesson learned: Fucking make sure your intial generation is correct before you do it! Don't fuck yourself in the ass!

______________________
Alternate! Try this: rolling back the migration with rake db:rollback STEP=1
Don't have to manually change all the files, hopefully.

http://stackoverflow.com/questions/26638930/adding-a-new-column-in-a-rails-database-migration

______________________
Note about localhost:3000:* showing a blank page (no error message) 
(after mistakenly starting rails server in /c/Users/user instead of /c/Users/user/yelpdemo:

Just. Restart. The. Computer. Don't know what causes this error.

___________________________________________________________
2. Set the Home Page

Home Page: yelpdemo/config/routes.rb
root 'restaurants/index'

___________________________________________________________
3. Get Started with Bootstrap
	Install Bootstrap

getbootstrap.com/getting-started

copy cdn, paste to app/views/layouts/application.html.erb 

right before </head>

In app/views/restaurants/index.html.erb add this: <table class="table" table-hover table-condensed>

___________________________________________________________
3. Add a Navigation Bar

Bootstrap compents navbar - add it to app/views/layouts/application.html.erb
right after <body>

Get rid of various unnecessary elements like the dropdowns and links simply by deleting/commenting out the html from bootstrap. Leave the search bar, though it doesn't work for now.

Add the Yelpdemo, About, and Contact links.

___________________________________________________________
3. Simplify Our Code

Create a partial - _navbar.html.erb

<%= render 'layouts/navbar' %> right before 
<%= yield %>

<%= is for when there's something to be shown on the page e.g. link, navbar
<% is for when there's nothing to be shown e.g. variable, starting a loop


___________________________________________________________
3. Build Beautiful Forms

bootstrap css forms
add form-control and form-group

form-control:
add , class: "form-control" 
e.g.<%= f.text_field :name, class: "form-control"%>

form-group:
change div class="field" to
<div class="form-group">

Button:
<%= f.submit %> change to 
 <%= f.submit class: "btn btn-primary"%>

Links:
in edit.html.erb add
,class: "btn btn-link"

also change index.html.erb: 
, class: "btn btn-link" right before the show/edit/destroy/new restauant elements

also change show.html.erb: edit and back buttons

also change new restaurant page:

to application.html.erb:

add a <div class="container-fluid">
 
<%= yield %>
<%= render 'layouts/footer' %>


</div>
___________________________________________________________
4. Launch Our Site
	Set Up Github

Don't worry about ssh if you're not on a mac! ~Should~ be generated automatically when you installed rails on windows (though I have my doubts...)

___________________________________________________________
4. Save Our Progress

First time:
Set up repository on GitHub,
go to yelpdemo folder, git init
on github webiste user settings:
"…or push an existing repository from the command line"
run this:
git remote add origin https://github.com/therealfix/yelpdemo.git

(steps to save work to github)

(1)git status - shows which files are tracked by git
(2)git add . - prepares all files to be saved
(3)git commit -m "Comment" - to save

Push git commit to github: Through "…or push an existing repository from the command line"
git push -u origin master

(4) git push
Note: only need git push after the first time!!!

_______________________
To get ssh keys working on windows: (to be able to use git push without having to enter username and password each time:)

a-link. http://stackoverflow.com/questions/6565357/git-push-requires-username-and-password

b-link. https://help.github.com/articles/generating-ssh-keys/

a. In your github, check the right of the screen, should be a "HTTPS/SSH/Subversion clone URL". change it to SSH and copy the link.

bash
git remote set-url origin git@github.com:username/repo.git

b. Step 1 should be fine, don't have to do step 2. Step 3, use eval %(ssh-agent -s), even though you ARE technically using Git Bash, it's still msysgit 'cause it's windows. Finish step 3, and 4 and 5. 
___________________________________________________________
4. Deploy on Heroku

For SOME reason, heroku login does not work on the "rainbow" bash. Have to use red bash. 

How to change default directory in bash:

http://stackoverflow.com/questions/7671461/how-do-i-change-the-default-location-for-git-bash-in-windows

Make a shortcut of git bash,
right-click for properties,
change start in: 
C:\Users\user\yelpdemo

To widen the git bash window,
http://boje-techaswere1.blogspot.com/2013/09/how-to-widen-git-bash-window.html

right click -> properties -> layout -> screen buffer size -> width

Added 
gem 'rails_12factor', group: :production 
to end of Gemfile

bundle install --without production
_______________________
How to shut down/restart a Rails server in Windows if you've closed the git bash that started it

For SOME reason this does not work in git bash! Only git cmd!

Open git cmd
cd yelpdemo
netstat -a -o -n -> find using local address: 0.0.0.0:3000 and its pid

taskkill /F /pid #### -> needs to be (/F)orcibly closed
rails s -> git bash
_______________________

Add: gem 'sqlite3', group: :development
gem 'pg', group: :production

bundle install, then restart rails s after adding gems

check ruby version with ruby -v,
then in the Gemfile write ruby '2.1.5' or whichever version you have

Deploy your app to heroku:
heroku create

rename the heroku app:
heroku rename yelpdemo-kevinp

git config -e

to quit and return to git bash: :q in the new window

Save! 
git status
git add .
git commit -m "Added gems to heroku"
git push

Deploy your app to heroku, finally!
git push heroku master

instead of just rake db:migrate
heroku run rake db:migrate

Finally view live site:
heroku open

The restaurants from your localhost are not there - production(heroku) and development(localhost:3000) are completely separate.
___________________________________________________________
5. Add Images
	Add the Carrierwave Gem

I think from now on I'll just refer to the transcript/notes of the video. No point simply repeating every little thing he says and does in the notes.
___________________________________________________________
5. Image Hosting with Amazon S3

Create a new file config/initializers/carrierwave.rb to put the chunk of code from https://github.com/carrierwaveuploader/carrierwave

To prevent the NoMethodError that prevents the rails s from starting up,
In Gemfile:
change
gem 'carrierwave' 
to
gem 'carrierwave', github:'carrierwaveuploader/carrierwave' 

To fix "Excon::Errors::SocketError in RestaurantsController...":

add:
require 'rubygems' 
require 'excon' 
Excon.ssl_verify_peer = false 

to the beginning of carrierwave.rb
___________________________________________________________
5. Protect Our Passwords

Instead of: 
Figaro v0.7
just put
Figaro 1.0

Instead of:
rails generate figaro:install
just put
figaro install

Instead of: 
rake figaro:heroku
just put
figaro heroku:set -e production

___________________________________________________________
5. Resize Images

imagemagick: for windows
http://www.imagemagick.org/script/binary-releases.php#windows

shut down rails c with ctrl c, 
restart both instances of bash,
convert should now display imagemagick info.

Note! To be able to see the ImageMagick version, you need to increase the screen buffer size, max 9999. Right click, properties, layout. Change screen buffer size height.

Remember!!! Image resizing happens when you upload the file. So you need to delete then reupload the image to see any resizing.

___________________________________________________________
6. Add Front-end Design
	Create a Custom Banner
___________________________________________________________
6. Format the Navbar

To do: Figure out how to install new font: Hobo Std
->Done! I believe you need to install the font on the local machine to get it to work.
___________________________________________________________
6. Add Static Images

Don't forget to make the image uploaded to s3 public by right clicking it!

___________________________________________________________
7. Add Users
	Install Devise

config/environments/development
config/environments/production -> change localhost to the actual application host.

___________________________________________________________
7. Insert Conditional Links

Graphical bug: sign up and sign out are on a level underneath the main banner, even when the browser is full screen. Happened when I first added the sign in/out links.
 
-> Fixed, changed:

 </button>
      <!-- href="/" goes to the homepage -->
      <!--<a class="navbar-brand" href="/">Yelpdemo</a>
      </div>
      -->
    
 <%= link_to "Yelpdemo", root_path, class: "navbar-brand" %>

to:

 </button>
      <!-- href="/" goes to the homepage -->
      <!--<a class="navbar-brand" href="/">Yelpdemo</a>
      -->
    
 <%= link_to "Yelpdemo", root_path, class: "navbar-brand" %>
    </div>

___________________________________________________________
7. Style Devise Forms

In app/views/sessions/new.html.erb:

<!-- Original: <div class="field">
      Alex's original: <div>
      Alex's changed: <div class="form-group">
  	  One I went with: -->
  <div class="form-group">

 <!-- Original: <div class="actions">
      Alex's original: <div>
      Alex's changed: <div class="form-group">
  	  One I went with: -->
  <div class="form-group">

  Changed to both to <div class="form-group"> as per Alex's comment.

___________________________________________________________
7. Customize Alerts and Error Messages

Not a big issue:
Don't have the popup green popup Review was successfully created after I finish my review.

___________________________________________________________
8. Add Reviews(I)
	Build a Review Scaffold

I posted a huge comment fixing the successful review popup not showing. 

Hey guys, I figured out a (fairly) simple way to correct the "Review was successfully created." popup not showing. 

From my dropbox: 
https://www.dropbox.com/sh/q1b1xay5fknswvm/AAAduR_qdDOX_zJrw4EOeNLHa?dl=0 

1. Take a look at the autogenerated reviews_controller: I've included a copy of it called "buggy_review_controller.txt" as a jpg and txt file for reference. This controller is useless. 

2. As Alex stated above, "Delete the reviews_controller.rb file and in your command line, run 'rails generate scaffold_controller Reviews'." 

3. The command line will ask you if you want to overwrite app/views/reviews/index.html.erb. I just entered 'q' for quit/abort. I've included a screenshot of the command line called "rails generate scaffold_controller Reviews result.JPG". 

4. Check your new reviews_controller.rb. There's one thing to change: 

def review_params 
params[:review] 
end 

to: 

# Taken from Alex's master version as stated above 
def review_params 
params.require(:review).permit(:rating, :comment) 
end 

I figured I might as well include a screenshot of that, as "change to working review controller.JPG" 

Finally, I've saved a copy of the final working version of reviews_controller.rb as "working_review_controller.txt". 

Alex, do you have any idea why the review controller might default to what it was in the beginning? I took a look at https://github.com/rails/rails/issues/17290 and the only thing I got from that was that it could be related to Devise being installed earlier? 

___________________________________________________________
8. Link Reviews to Users

added # placeholder to save with git msg so I could git commit the files that were changed in this lesson.

___________________________________________________________
8. Modify Data with Rails Console

Remember to give each review a user_id to avoid errors later on.

with 
> @reviews = Review.all
> @reviews.each do |review|
> review.user_id = 1
> review.save
> end

To exit the console:
You could try:

Ctrl D
Ctrl Z and then Enter
Typing exit, then Enter.
___________________________________________________________
8. Remove Unnecessary URLs

Realllly watch out for typos here. For example:

in reviews_controller.rb:

def create
    @review = Review.new(review_params)
    @review.user_id = current_user.id
    @review.restaurant_id = @restaurant.id
# restaurant_id, then restaurant.id
___________________________________________________________
9. Add Reviews (II)
	Link Reviews to Restaurants



___________________________________________________________
9. Nest Resource URLs



___________________________________________________________
9. Display Reviews



___________________________________________________________
10. Add Star Ratings
	Convert Numbers to Stars

Be very careful with your syntax here. E.g.
<div class="star-rating" data-score= <%= review.rating %> ></div>
									 # Don't forget the > > here!
___________________________________________________________
10. Layer on More Options




___________________________________________________________
11. Set Validations and Permissions
	Add User Fields



___________________________________________________________
11. Integrate names into Reviews



___________________________________________________________
11. Validate Submitted Data



___________________________________________________________
11.Set User Permissions

Added this to app/views/restaurants/show.html.erb

# check if user is signed in and an admin and only show the "Edit" link to admin users 
<% if user_signed_in? && current_user.admin? %> 
<%= link_to 'Edit', edit_restaurant_path(@restaurant), class: "btn btn-link" %> | 
<% end %> 
<%= link_to 'Back', restaurants_path, class: "btn btn-link" %> 

___________________________________________________________
12. Add Bells and Whistles
	Embed Google Maps



___________________________________________________________
12. Set Up Search

Elasticsearch must be installed with elevated cmd!

If it isn't clear enough, command prompt (not git bash!) run as administrator!


C:\Desktop\Kevin_practice\BaseRails Ruby on Rails\elasticsearch-1.7.1\elasticsearch-1.7.1\bin

My comment:

For Windows users, after you've restarted your computer, the search function will not work in localhost! Unless... 

In my dropbox: 
https://www.dropbox.com/sh/27uvm2qdjjeugob/AACMrqiJCeJExrVtP4aCc7JKa?dl=0 

You open an elevated command prompt, cd ...elasticsearch-1.7.1\bin, service.bat, service start (again). (see example windows cmd for elasticsearch.JPG. I'd already installed the service previously) 

For some reason, elasticsearch has to be manually restarted. Or else you will get a Faraday::ConnectionFailed in RestaurantsController#Search error (see "search not working in localhost.jpg) 

Alex, is there any way to get the elasticsearch service to reinstall itself automatically, say once you run rails s? I suppose it's not worth the hassle though, considering you'd have to come up with a batch file and link that to the yelpdemo project proper... and adding that might interfere with production (the search function works as expected on heroku). Not worth spending hours to save seconds - it's just the localhost after all. I guess it's just another one to add to the list of Windows compat issues! 

___________________________________________________________
12. Course Summary

Comment:

Hey Alex, I just finished the course, I learned a LOT and it's definitely worth WAY MORE than the price of admission, especially with your help. Here's my live app, not that it's much different than yours (yet) yelpdemo-kevinp.herokuapp.com 

I wanted to ask where you'd recommend researching to further polish the site's styling: 
https://www.dropbox.com/sh/ubbuutqu3x67uyb/AABGcucT_E60AOEH1tmxy5yta?dl=0 

1. For the navbar, to never have it drop down to two levels 
2. To prevent reviews from smushing into the the left side 
3. Are you planning to teach testing/mobile interfaces? I'd love to apply it to my yelpdemo, I've grown attached to it, since it's my first "real" site 

I guess the only thing to do now is to move on to Etsydemo! :)

___________________________________________________________
13. Add a Facebook 'Like' Button

Added like button to app/views/restaurants/show.html.erb but they are not showing up each time. 
Solution: 
http://stackoverflow.com/questions/20338619/fb-like-button-shows-up-only-once-on-first-load-of-my-angularjs-view 

<div id="fb-root"></div> 
<script> 
// Add FB =null; 
FB = null; 
(function(d, s, id) { 
var js, fjs = d.getElementsByTagName(s)[0]; 
// comment out the if statement 
//if (d.getElementById(id)) return; 
js = d.createElement(s); js.id = id; 
js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.4"; 
fjs.parentNode.insertBefore(js, fjs); 
}(document, 'script', 'facebook-jssdk'));</script> 

Have to go to the restaurant show page and reload the page for the like button to appear.  

Alternate: based on Alex's comment

http://blog.flightswithfriends.com/post/53943440505/how-to-disable-turbolinks-in-rails-4

My comment: "All I had to do to keep using the original _facebook.html.erb was add "data-no-turbolink" to the body tag in application.html.erb."

____________________________

Installed Chrome extension "Page Ruler" - way simpler than writing out code to figure out exact dimensions of elements. 

Facebook like button length: 78 -86 (claimed default 90)px depending on # of people liking it
Facebook like button width: 20 px


Diagram to explain:

Fullscreen dimensions using Page Ruler:

                    col-md-3: 363px
_______________________________________________________
|                                                      |
|     Google Maps Embed API: 230                       |
|                                                      |
| Shitty little padding at the left of maps: 15        |
| _____________________________________                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |                                   |                |
| |___________________________________|                |
|                   |                                  |
|   Halfway point: 230/2 = 115 (Maps edge to center)   |
|   left side col-md-3 to center of maps: 115 + 15     |
|   = 130                                              |
|             __________  ____                         |
|             |  Like  | / 0 |                         |
|             |________| \___|                         |
|                                                      |
|           Avg like btn width: 80                     |
|           Half of like btn: 80/2 = 40                |
|                                                      |
|  therefore, css left: 130 - 40 = 90                  |
|______________________________________________________|                                                      
Fuck that took so long.

The dimensions are also found on 
https://developers.facebook.com/docs/plugins/like-button

Ok, figured out how to center the facebook button. 
1. HTML: app/views/restaurants/show.html.erb
  Wrap button in 

  <div id="facebook_button">
    <div class="fb-like" ... >
    </div>
  </div>

2. CSS: app/assets/stylesheets/custom.css.scss
  #facebook_button {
    position: absolute;
    left: 90px;
  }

3. HTML: app/views/restaurants/show.html.erb
  Add <br> tags around button so reviews don't vertically overlap.

____________________________
Like Button changes to be made: 
  - change like button to refer to each restaurant, not just the homepage as I have it set up now, which is data-href="http://yelpdemo-kevinp.herokuapp.com". 

  - Also, like button must refer to yelpdemo-kevinp and not localhost, like button cannot be applied to localhost. Therefore testing for the button must be done on production.


  - Find way to access admin credentials on heroku run rails c (refer to 8. Modify Data with Rails Console and 11. Add User Fields)

  https://www.baserails.com/courses/yelpdemo/modify-data-with-rails-console
  https://www.baserails.com/courses/yelpdemo/add-user-fields

  admin: alice@yelpdemo.com
  password: kevin436

  DONE - Create 10 restaurants in heroku 

  - Verify that like button does indeed show for each restaurant.


___________________________________________________________



___________________________________________________________



___________________________________________________________
Final Clean up and To Do:

Figure out way to see heroku's postgres database without using heroku run rails c.

CSS styling finishing touches and overlapping text with google maps in restaurants show page. Took a screenie.
Also mobile interfaces, testing.
 - commented already in 12. Course Summary
_____________________
